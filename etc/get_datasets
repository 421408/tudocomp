#!/bin/bash

# check command line
if [ -z "$1" ]; then
    echo "Usage: get_datasets <dir> <dataset_file>"
    exit 1
fi

if [ -z "$2" ]; then
    echo "Usage: get_datasets <dir> <dataset_file>"
    exit 1
fi

if [ ! -d "$1" ]; then
    echo "Not a directory: $1"
    exit 1
fi

if [ ! -f "$2" ]; then
    echo "Not a file: $2"
    exit 1
fi

OUT=${1%/}

source "$2"

mkdir -p $OUT_PNC

OUT_TMP=$OUT/tmp
mkdir -p $OUT_TMP

for T in $PNC_TEXTS; do
    # filename of download file
    F_TMP=$OUT_TMP/`basename $T`

    # filename for final dataset file
    # removes .gz endings for files that need to be decompressed
    if [[ $F_TMP == *.gz ]]; then
        F=$OUT_PNC/`basename $T .gz`
    else
        F=$OUT_PNC/`basename $T`
    fi

    # download base file if necessary
    if [ ! -f $F ]; then
        # make sure we don't get partial downloads by preventing the
        # script from executing further
        set -e

        URL=$PNC_URL/$T
        wget -c -P $OUT_TMP $URL

        if [[ $F_TMP == *.gz ]]; then
            gzip -d $F_TMP
            F_TMP=$OUT_TMP/`basename $T .gz`
        fi

        mv $F_TMP $F
        set +e
    fi

    # generate prefixes
    if [ -f $F ]; then
        F_MB=$((`stat -c %s $F`/1024/1024))

        for S in $PNC_PREFIXES; do
            if [ $F_MB -ge $S ]; then
                FP=${F}.${S}MB
                if [ ! -f $FP ]; then
                    echo "$F -> $FP"
                    cat $F | dd count=${S}K bs=1K > $FP
                fi
            fi
        done
    fi

done
