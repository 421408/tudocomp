#!/bin/bash
FILES=files
COMPRESSORS=compressors
TMP=/tmp
STORE=$TMP/compare.store
TIME=/usr/bin/time

SUITE=$1

# Check input
if [ -z "$SUITE" ]; then
    echo "Usage: compare <suite-file>"
    exit 1
fi

if [ ! -f $SUITE ]; then
    echo "Suite file not found: $1"
    exit 1
fi

# Execute command suite
FILENAMES=`ls $FILES`
for F in $FILENAMES; do

export IN=files/$F
INSZ=`du -b $IN | cut -f 1`

echo
echo "$IN ($INSZ bytes) ..."
echo
printf "%16s | %10s | %10s | %9s | %10s | %10s\n" "" "C Time" "C Memory" "C Rate" "D Time" "D Memory"
printf "=%.0s" {1..80}
echo

while read LINE; do
    if [[ ${LINE:0:1} == "#" ]]; then
        continue
    fi

    # parse suite
    IFS=";" read -r NAME EXT CMD CARGS DARGS <<< "$LINE"

    if [ -z "$NAME" -o -z "$EXT" -o -z "$CMD" ]; then
        printf "%80s\n" "(invalid entry in suite)"
        continue
    fi

    CCMD=$COMPRESSORS/${CMD}_c
    DCMD=$COMPRESSORS/${CMD}_d

    export CARGS
    export DARGS

    if [ ! -f $CCMD ]; then
        printf "%80s\n" "(no compressor found for '$CMD')"
        continue
    elif [ ! -f $DCMD ]; then
        printf "%80s\n" "(no decompressor found for '$CMD')"
        continue
    fi

    # determine output file and delete it if it still exists
    export OUT=$TMP/$F$EXT
    rm -f $OUT

    # remove already decompressed file if exists
    rm -f $TMP/$F

    # print name
    printf "%16s | compressing ..." "$NAME"

    # compress
    $TIME -f "%U;%M" -o $STORE $CCMD >/dev/null 2>&1
    OK=$?

    echo -en "\033[15D" # move cursor left

    if [ $OK -eq 130 ]; then
        echo -en "\033[2D" # move cursor left
        printf "%61s\n" "(cancelled)"
        continue
    elif [ $OK -eq 127 ]; then
        printf "%61s\n" "(not installed)"
        continue
    elif [ $OK -ne 0 ]; then
        printf "%61s\n" "(compress error $OK)"
        continue
    fi

    IFS=";" read -r TM MEM < $STORE

    # print runtime and memory usage
    printf "%#8.2f s | %8d K | " $TM $MEM

    if [ ! -f $OUT ]; then
        printf "%35s\n" "($OUT not found)"
        continue
    fi

    # calculate compression rate
    OUTSZ=`du -b $OUT  | cut -f 1`
    RATE=`echo 100*$OUTSZ/$INSZ | bc -l`

    # print name and compression rate
    printf "%8.4f%% | " $RATE

    # decompress
    printf "decompressing ..."

    $TIME -f "%U;%M" -o $STORE $DCMD $OUT /dev/null $DARGS >/dev/null 2>&1
    OK=$?

    echo -en "\033[17D" # move cursor left

    if [ $OK -eq 130 ]; then
        echo -en "\033[2D" # move cursor left
        printf "%23s\n" "(cancelled)"
        continue
    elif [ $OK -ne 0 ]; then
        printf "%23s\n" "(decompress error $OK)"
        continue
    fi

    IFS=";" read -r TM MEM < $STORE

    # print runtime and memory usage
    printf "%#8.2f s | %8d K\n" $TM $MEM

done < $1 # suite
done # files

echo
